%body.impress-not-supported
  .fallback-message
    %p
      Your browser
      %b doesn't support the features required
      by impress.js, so you are presented with a simplified version of this presentation.
    %p
      For the best experience please use the latest
      = succeed "," do
        %b Chrome
      %b Safari
      or
      %b Firefox
      browser.
  #impress
    #bored.step.slide{"data-x" => "-1000", "data-y" => "-1500"}
      %q
        %b DataTables
        %p.question What?
        %p.question Why?
        %p.question How?
    .step.slide{"data-x" => "0", "data-y" => "-1500"}
      %q
        %b What are DataTables?
        %p
          Datatables is a 
          %strong jquery
          plug-in which is based on 
          %strong progressive enhancement
          and adds advanced interaction controls to any html table.
    .step.slide{"data-x" => "1000", "data-y" => "-1500"}
      %q
        %b Why you need DataTables?
        %p 1.) Filtering
        %p 2.) Sorting
        %p 3.) Pagination
        %p 4.) Display data from multiple sources & lot more.
    .step.slide{"data-x" => "2000", "data-y" => "-1500"}
      %q
        %b How to use DataTables?
        %p 1.) Download the datatables package from http://www.datatables.net/download/
        %p.small_text 1.a) Include the DataTables js and css file in your layout's head section.
    .step.slide{"data-x" => "3000", "data-y" => "-1500"}
      %q
        %b How to use DataTables?
        %p 2.) Include in your gemfile gem 'jquery-datatables-rails'
        %p.small_text 2.a) Add the javascript to application.js as //= require dataTables/jquery.dataTables
        %p.small_text 2.b) Add the stylesheet to application.css as //= require dataTables/jquery.dataTables
    .step.slide{"data-x" => "4000", "data-y" => "-1500"}
      %q
        %b Dependencies/Requirements
        %p 1.) jQuery 1.3 or higher
        %p 2.) HTML table format
    .step.slide{"data-x" => "5000", "data-y" => "-1500"}
      %q
        %b HTML table format
        = image_tag 'table_image.png'
    .step.slide{"data-x" => "6000", "data-y" => "-1500"}
      %q
        %b Basic Configuration
        = image_tag 'initial_code.png'
    .step.slide{"data-x" => "7000", "data-y" => "-1500"}
      %q
        %b Basic Options
        %p.small_text 1.) aaSorting :- It allows you to define which columns the sorting should be done on and in what direction.
        %p.small_text The default value set is [[0, 'asc']]
        = image_tag 'sorting_1.png'
    .step.slide{"data-x" => "8000", "data-y" => "-1500"}
      %q
        %b Basic Options
        %p.small_text 2.) bFilter :- Enable or disable filtering of data. Filtering is 'smart' filtering.
        %p.small_text The default value set is true.
        = image_tag 'filter_1.png'
    .step.slide{"data-x" => "9000", "data-y" => "-1500"}
      %q
        %b Basic Options
        %p.small_text 3.) bSearchable :- Enable or disable filtering on data in this column.
        %p.small_text The default value set is true.
        = image_tag 'searchable_1.png'
    .step.slide{"data-x" => "10000", "data-y" => "-1500"}
      %q
        %b Basic Options
        %p.small_text 4.) bSortable :- Enable or disable sorting on this column. 
        %p.small_text By default it allows sorting on all the columns. Its default value is true.
        = image_tag 'sorting_2.png'
    .step.slide{"data-x" => "11000", "data-y" => "-1500"}
      %q
        %b Basic Options
        %p.small_text 5.) bVisible :- Enable or disable sorting on this column. 
        %p.small_text By default, all the columns are visible.
        = image_tag 'visible_1.png'
    .step.slide{"data-x" => "12000", "data-y" => "-1500"}
      %q
        %b Basic Options
        %p.small_text 6.) fnAddData :- Add a single row or multiple rows to the table.
        %p.small_text The inputs this function takes:-
        %p.small_text 1.) 1D array of data. It adds a single row to the table.
        %p.small_text 2.) 2D array of arrays. It adds multiple rows in a single call.
    .step.slide{"data-x" => "13000", "data-y" => "-1500"}
      %q
        %b Basic Options
        %p.small_text 7.) oLanguage :- It is used to change the language information provided by DataTables.
        = image_tag 'language_1.png', :style => "height:310px;"
    .step.slide{"data-x" => "14000", "data-y" => "-1500"}
      %q
        %b Some Other Options
        %p.small_text 1.) fnClearTable
        %p.small_text 2.) fnDestroy
        %p.small_text 3.) sClass
        %p.small_text 4.) sWidth
        %p.small_text 5.) bPaginate
        %p.small_text You can find a lot more options at datatables.net
    .step.slide{"data-x" => "15000", "data-y" => "-1500"}
      %q 
        %b What else is out there other than DataTables ?
      %p.medium_text 1.) FooTables
      %p.medium_text 2.) Zurb's datatables
      %p.medium_text 3.) Chris Coyier's datatables
      %p.medium_text{:style => "margin-left:140px;"} and some more plugins.
    .step.slide{"data-x" => "16000", "data-y" => "-1500"}
      %q 
        %b Refrences & other plugins used: - 
      %p.medium_text 1.) datatables.net
      %p.medium_text 2.) impress.js https://github.com/bartaz/impress.js/
      %p.medium_text Presentation and demo at 
      %p.medium_text git@github.com:rishijain/datatables-talk.git
    #title.step{"data-scale" => "4", "data-x" => "0", "data-y" => "0"}
  .hint
    %p Use a spacebar or arrow keys to navigate
<script src="assets/impress.js"></script>
:javascript
  impress().init();    
  var api = impress();
  if ("ontouchstart" in document.documentElement) { 
      document.querySelector(".hint").innerHTML = "<p>Tap on the left or right to navigate</p>";
  }
